services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.9
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - kafka-net
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    container_name: kafka
    image: bitnami/kafka:4.0.0
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CLIENT_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - kafka-net
    depends_on:
      - zookeeper

  app:
    build:
      context: .
      dockerfile: docker/dev/Dockerfile.dev
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - kafka
    volumes:
      - .:/app
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge

volumes:
  kafka_data:
  zookeeper_data:
